<style lang="less">
.tab_box {
    background: #fff;
    padding: 0 120rpx;
}
</style>
<template>
<view class="collection">
  <!-- <scroll-view scroll-y="true" class="swiper-item-box" style="height:{{winHeight - 31}}px" bindscrolltolower="onReachBottom"> -->
  <collectionList :list.sync="favorlist"></collectionList>
  <!-- </scroll-view> -->
  </view>
  </template>
  <!--加载更多时动画-->
  <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
  <script>
  import wepy from 'wepy';
import api from '@/api/api';
import Tab from '@/components/tab'
import CollectionList from '@/components/collection_list'
import BottomLoadMore from "../components/common/bottomLoadMore"
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO,
  USER_INFO
} from '@/utils/constant';

export default class PointsRules extends wepy.page {
  config = {
    navigationBarTitleText: "我的收藏",
  }
  components = {
    tab: Tab,
    collectionList: CollectionList,
    bottomLoadMore: BottomLoadMore
  }

  data = {
    favorlist:[],
    winHeight: 0,
    //当前页面
    currentPage: 1,
    //总页数
    page_total: 0,
    //是否显示 底部loading
    showLoading: true,
    //防止重复加载
    preventRepeatReuqest: false
  }

  async getUserFavorite(currentPage, size) {
    let that = this;
    let userInfo = wepy.getStorageSync(USER_INFO);
    let userId = userInfo.uid;
    const json = await api.favoriteInfo({
      query: {
        userId: userId,
        method:"POST"
      }
    });
    console.log(json.data);
    if (json.data.status == 1) {

      that.favorlist = [...that.favorlist, ...json.data.data];
      // that.page_total = json.data.page_total;
      console.log(that.favorlist);
      that.$invoke('collectionList', 'refreshList', that.favorlist);
      that.$apply();
    } else {
      tip.error("系统正在维护中");
    }
    that.showLoading = false;
  }

  onLoad(opts) {
    let that = this;
    let title = "";
    that.favorlist={};
    console.log("调用收藏")
    that.getUserFavorite();
    //设置滚动高度
    let systemInfo = wepy.getStorageSync(SYSTEM_INFO);
    that.winHeight = systemInfo.windowHeight;
    that.$apply();

  }
  computed = {

  }
  methods = {

  }

  events = {

  }

  // //加载更多
  // onReachBottom() {
  //   console.log("加载更多");
  //   let that = this;
  //   that.showLoading = true;
  //   console.log(that.page_total + "===" + that.currentPage);
  //   //判断总页数是否大于翻页数
  //   if ((that.page_total) > that.currentPage) {
  //     //防止重复加载
  //     if (that.preventRepeatReuqest) {
  //       return true;
  //     }
  //     that.preventRepeatReuqest = true;
  //     that.currentPage++;
  //     console.log(this.currentTab);
  //     if (this.currentTab==0) {
  //       console.log("下拉收藏");
  //       that.getUserBrowse(that.currentPage);
  //     } else {
  //       that.getUserFavorite(that.currentPage);
  //     }
  //     that.preventRepeatReuqest = false;
  //   } else {
  //     that.showLoading = false;
  //   }
  // };
}

</script>
